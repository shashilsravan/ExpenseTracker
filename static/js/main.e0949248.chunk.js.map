{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","index.js"],"names":["Header","props","title","state","action","type","transactions","filter","transaction","id","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","total","useContext","map","amount","reduce","a","b","toFixed","IncomeExpenses","amounts","income","item","expense","className","Transaction","text","onClick","TransactionList","key","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","alert","newTransaction","Math","floor","random","htmlFor","onChange","target","placeholder","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e0949248.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Header = (props) => {\r\n    return (\r\n        <h2>\r\n            {props.title}\r\n        </h2>\r\n    )\r\n}\r\n","export default (state, action) => {\r\n    switch(action.type){\r\n        case 'DELETE_TRANSACTION':\r\n            return{\r\n                ...state,\r\n                transactions: state.transactions\r\n                .filter(transaction => transaction.id !== action.payload)\r\n            }\r\n        case 'ADD_TRANSACTION':\r\n            return{\r\n                ...state,\r\n                transactions: [...state.transactions, action.payload]\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import React, { createContext, useReducer} from 'react'\r\nimport AppReducer from './AppReducer'\r\n\r\nconst initialState = {\r\n    transactions: [\r\n        \r\n    ]\r\n}\r\n\r\nexport const GlobalContext = createContext(initialState)\r\n\r\nexport const GlobalProvider = ({children}) => {\r\n    const [state, dispatch] = useReducer(AppReducer, initialState)\r\n    function deleteTransaction(id){\r\n        dispatch({\r\n            type: 'DELETE_TRANSACTION',\r\n            payload: id\r\n        })\r\n    }\r\n    function addTransaction(transaction){\r\n        dispatch({\r\n            type: 'ADD_TRANSACTION',\r\n            payload: transaction\r\n        })\r\n    }\r\n    return (\r\n    <GlobalContext.Provider\r\n        value={{\r\n            transactions: state.transactions,\r\n            deleteTransaction, addTransaction\r\n            }}>\r\n        {children}\r\n    </GlobalContext.Provider>)\r\n}","import React, { useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\n\r\nexport const Balance = () => {\r\n    const {transactions} = useContext(GlobalContext)\r\n\r\n    const amounts = transactions.map(transaction => transaction.amount)\r\n    // console.log('amounts', amounts)\r\n    const total = amounts.reduce((a, b) => (a += b), 0).toFixed(1);\r\n    // console.log('total', total)\r\n    return (\r\n        <>\r\n            <h4>My Balance</h4>\r\n            <h1>₹ { total }</h1>\r\n        </>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\n\r\nexport const IncomeExpenses = () => {\r\n    const {transactions} = useContext(GlobalContext)\r\n    const amounts = transactions.map(transaction => transaction.amount)\r\n    const income = amounts.filter(item => item>0).reduce((a, b) => (a += b), 0).toFixed(1)\r\n    const expense = amounts.filter(item => item < 0).reduce((a, b) => (a -= b), 0).toFixed(1)\r\n    return (\r\n        <div className=\"inc-exp-container\">\r\n            <div>\r\n                <h4>Income</h4>\r\n                <p className=\"money plus\">+₹{ income } </p>\r\n            </div>\r\n            <div>\r\n                <h4>Expense</h4>\r\n                <p className=\"money minus\">-₹{expense}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\n\r\nconst Transaction = ({ transaction }) => {\r\n    const { deleteTransaction } = useContext(GlobalContext)\r\n    return (\r\n        <li className={transaction.amount > 0 ? \"plus\" : \"minus\"}>\r\n            {transaction.text}\r\n                <span>{transaction.amount} ₹</span>\r\n            <button onClick={() => deleteTransaction(transaction.id)} className=\"delete-btn\">X</button>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Transaction\r\n","import React, {useContext} from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\nimport Transaction from './Transaction'\r\nexport const TransactionList = () => {\r\n    const { transactions } = useContext(GlobalContext);\r\n    return (\r\n        <div>\r\n            <h3>Transaction History</h3>\r\n            <ul className=\"list\">\r\n                {transactions.map(transaction => (\r\n                   <Transaction key={transaction.id} transaction={transaction} /> \r\n                ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useContext} from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\n\r\n\r\nexport const AddTransaction = () => {\r\n    const [text, setText] = useState('');\r\n    const [amount, setAmount] = useState(0);\r\n    const { addTransaction } = useContext(GlobalContext)\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (text === '' || amount === 0){\r\n            alert('Enter values')\r\n        }\r\n        else{const newTransaction = {\r\n            id: Math.floor(Math.random() * 100000),\r\n            text: text, amount: +amount,\r\n        }\r\n        addTransaction(newTransaction)}\r\n    }\r\n    return (\r\n        <div>\r\n            <h3> Add New Transaction</h3>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"text\">Text</label>\r\n                    <input value={text} onChange={(e) => setText(e.target.value)} type=\"text\" placeholder=\"Enter text...\" />\r\n                </div>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"amount\">Amount <br/>\r\n                    (negative - expense, positive - income)\r\n                    </label>\r\n                    <input value={amount} onChange={(e) => setAmount(e.target.value)} type=\"number\" placeholder=\"Enter amount...\" />\r\n                </div>\r\n                <button className=\"btn\">Add Transaction</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport {Header} from './components/Header'\nimport {Balance} from './components/Balance'\nimport {IncomeExpenses} from './components/IncomeExpenses'\nimport {TransactionList} from './components/TransactionList'\nimport {AddTransaction} from './components/AddTransaction'\nimport {GlobalProvider} from './context/GlobalState'\n\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Header title={\"SS Expense Tracker\"} />\n      <div className=\"container\">\n        <Balance />\n        <IncomeExpenses />\n        <TransactionList />\n        <AddTransaction />\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}